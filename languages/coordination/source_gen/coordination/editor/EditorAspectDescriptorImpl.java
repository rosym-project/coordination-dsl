package coordination.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {


  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0b, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new Comment_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new CompositeState_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new FireEvent_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new LogMessage_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new MultiLineComment_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new ParallelState_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new State_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new StateMachine_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new String_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new Transition_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new WaitDuration_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new WaitForEvent_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }

  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0c, descriptor.getConceptFqName())) {
      case 0:
        switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0a2, editorComponentId)) {
          case 0:
            return Collections.<ConceptEditorComponent>singletonList(new actions());
          case 1:
            return Collections.<ConceptEditorComponent>singletonList(new finalstate());
          case 2:
            return Collections.<ConceptEditorComponent>singletonList(new transitions());
          default:
        }
        break;
      default:
    }
    return Collections.<ConceptEditorComponent>emptyList();
  }



  private static String[] stringSwitchCases_xbvbvu_a0a0b = new String[]{"coordination.structure.Comment", "coordination.structure.CompositeState", "coordination.structure.FireEvent", "coordination.structure.LogMessage", "coordination.structure.MultiLineComment", "coordination.structure.ParallelState", "coordination.structure.State", "coordination.structure.StateMachine", "coordination.structure.String", "coordination.structure.Transition", "coordination.structure.WaitDuration", "coordination.structure.WaitForEvent"};
  private static String[] stringSwitchCases_xbvbvu_a0a0a0a2 = new String[]{"coordination.editor.actions", "coordination.editor.finalstate", "coordination.editor.transitions"};
  private static String[] stringSwitchCases_xbvbvu_a0a0c = new String[]{"coordination.structure.StateLike"};
}
