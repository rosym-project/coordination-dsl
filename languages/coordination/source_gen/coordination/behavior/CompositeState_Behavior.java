package coordination.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class CompositeState_Behavior {
  public static void init(SNode thisNode) {
  }

  public static String virtual_getEntryMessage_6168113672289374367(SNode thisNode) {
    return "Entering composite state " + BehaviorReflection.invokeVirtual(String.class, thisNode, "virtual_getStateName_6168113672289375101", new Object[]{});
  }

  public static String virtual_getExitMessage_6168113672289374913(SNode thisNode) {
    return "Leaving composite state " + BehaviorReflection.invokeVirtual(String.class, thisNode, "virtual_getStateName_6168113672289375101", new Object[]{});
  }

  public static String virtual_getStateName_6168113672289375101(SNode thisNode) {
    String name = "";

    if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(thisNode), "coordination.structure.StateMachine"))) {
      name = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(SNodeOperations.getParent(thisNode), "coordination.structure.StateLike"), "virtual_getStateName_6168113672289375101", new Object[]{}) + "_";
    }

    return SPropertyOperations.getString(thisNode, "name").replace(" ", "_");
  }
}
