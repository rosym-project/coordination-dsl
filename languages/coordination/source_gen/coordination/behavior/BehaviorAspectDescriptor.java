package coordination.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;

public class BehaviorAspectDescriptor implements jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor {
  public BehaviorAspectDescriptor() {
  }

  public BehaviorDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0b, fqName)) {
      case 6:
        return new StateMachine_BehaviorDescriptor();
      case 5:
        return new State_BehaviorDescriptor();
      case 1:
        return new CompositeState_BehaviorDescriptor();
      case 4:
        return new ParallelState_BehaviorDescriptor();
      case 7:
        return new Transition_BehaviorDescriptor();
      case 3:
        return new LogMessage_BehaviorDescriptor();
      case 8:
        return new WaitDuration_BehaviorDescriptor();
      case 2:
        return new FireEvent_BehaviorDescriptor();
      case 0:
        return new Comment_BehaviorDescriptor();
      case 9:
        return new WaitForEvent_BehaviorDescriptor();
      default:
        return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
    }
  }

  private static String[] stringSwitchCases_846f5o_a0a0b = new String[]{"coordination.structure.Comment", "coordination.structure.CompositeState", "coordination.structure.FireEvent", "coordination.structure.LogMessage", "coordination.structure.ParallelState", "coordination.structure.State", "coordination.structure.StateMachine", "coordination.structure.Transition", "coordination.structure.WaitDuration", "coordination.structure.WaitForEvent"};
}
